openapi: 3.0.0
info:
  title: 'Ticketing API Documentation'
  description: 'Ticketing API Documentation'
  version: 1.0.0
servers:
  -
    url: 'https://ticketing.api.syahrulap.my.id'
paths:
  /login:
    post:
      tags:
        - Auth
      summary: 'User login'
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '201':
          description: 'Login successful'
        '401':
          description: 'Invalid credentials'
  /api/tickets:
    get:
      tags:
        - Tickets
      summary: 'Get all tickets'
      operationId: getTickets
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
      security:
        -
          bearerAuth: []
    post:
      tags:
        - Tickets
      summary: 'Create a new ticket'
      operationId: createTicket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: 'Ticket created successfully'
      security:
        -
          bearerAuth: []
  '/api/tickets/{id}':
    put:
      tags:
        - Tickets
      summary: 'Update an existing ticket'
      operationId: updateTicket
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: 'Ticket updated successfully'
        '404':
          description: 'Ticket not found'
      security:
        -
          bearerAuth: []
    delete:
      tags:
        - Tickets
      summary: 'Delete a ticket'
      operationId: deleteTicket
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Ticket deleted successfully'
        '404':
          description: 'Ticket not found'
      security:
        -
          bearerAuth: []
components:
  schemas:
    Auth:
      properties:
        email:
          type: string
          example: admin@example.com
        password:
          type: string
          example: password
      type: object
    Ticket:
      properties:
        title:
          type: string
          example: 'Issue with server'
        description:
          type: string
          example: 'The server is down since morning.'
        status:
          type: string
          enum:
            - open
            - in_progress
            - closed
          example: open
        priority:
          type: string
          enum:
            - low
            - medium
            - high
          example: medium
      type: object
  securitySchemes:
    bearerAuth:
      type: http
      bearerFormat: JWT
      scheme: bearer
tags:
  -
    name: Auth
    description: 'User authentication'
  -
    name: Tickets
    description: 'Operations about tickets'
